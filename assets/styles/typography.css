/*----------------------------*/
/* TYPOGRAPHY */
/*----------------------------*/

body {
  @apply 
  font-body
  ;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  @apply
  leading-[1.1]
  ;
}

h1,
.h1 {
  @apply
  font-headings
  text-mono-100
  font-bold
  uppercase
  ;
  > small {
    @apply
    text-[50%]
    font-body
    font-normal
    ;
  } 
}

h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  @apply
  font-body
  uppercase
  font-normal
  ;
}

h1,
.h1 {
  @apply
  text-5xl
  md:text-7xl
  leading-[0.8]
  ;
}

h2,
.h2 {
  @apply
  text-3xl
  md:text-4xl
  tracking-wide
  text-ui-100
  ;
}

h3,
.h3 {
  @apply
  text-2xl
  md:text-3xl
  text-ui-100
  ;
}

h4,
.h4 {
  @apply
  text-xl
  md:text-2xl
  text-ui-100
  ;
}

h5,
.h5 {
  @apply
  text-lg
  md:text-xl
  ;
}

h6,
.h6 {
  @apply
  text-lg
  ;
  &:not([class*='text-']){
    @apply
    text-ui-200
    ;
  }
}

hr,
.separator {
  @apply
  mx-auto
  block
  w-full
  ;

  &.separator-gradient {
    @apply
    h-px
    border-none
    bg-gradient-to-r
    from-ui-600/0
    via-ui-600
    to-ui-600/0
    ;
  }

  &:not(.separator-vertical) {
    @apply
    h-px
    ;
  }

  &.separator-vertical {
    @apply
    w-px
    border-none
    ;
    &:not([class*='h-']) {
      @apply
      h-full
      ;
    }
  }

  &:not([class*='border-']) {
    @apply
    border-ui-600
    ;
  }
}

.text-gradient {
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}


ul, ol {
  &.list-bullet {
    @apply
    pl-8
    list-outside
    ;

    > li {
      @apply
      relative
      pb-8
      ;
      &::before,
      &::after {
        @apply
        content-[""]
        absolute
        ;
      }
      &::before {
        @apply
        z-10
        w-4
        h-4
        rounded-full
        bg-main
        shadow-[0_0_0_1px_rgb(var(--color-interaction-300)),_inset_0_0_0_4px_rgb(var(--color-ui-800))]
        -left-8
        top-1
        ;
      }
      &::after {
        @apply
        z-0
        w-px
        h-full
        bg-ui-600
        -left-[calc(1.5rem+0.5px)]
        top-5
        ;
      }
      &:last-of-type {
        @apply
        pb-0
        ;
        &::after {
          @apply
          hidden
          opacity-0;
          ;
        }
      }
      :where(ul, ol) {
        @apply
        mt-2
        space-y-2
        pl-4
        ;
      }
      :where(ul) {
        @apply
        list-disc
        ;
      }
    }

    &.list-premium {
      > li {
        &::before {
          @apply
          bg-premium-500
          shadow-[0_0_0_1px_rgb(var(--color-premium-300)),_inset_0_0_0_4px_rgb(var(--color-ui-800))]
          ;
        }
      }
    }
    &.list-blue {
      > li {
        &::before {
          @apply
          bg-blue-500
          shadow-[0_0_0_1px_rgb(var(--color-blue-300)),_inset_0_0_0_4px_rgb(var(--color-ui-800))]
          ;
        }
      }
    }
    &.list-purple {
      > li {
        &::before {
          @apply
          bg-purple-500
          shadow-[0_0_0_1px_rgb(var(--color-purple-300)),_inset_0_0_0_4px_rgb(var(--color-ui-800))]
          ;
        }
      }
    }
  }
}

.format {
  :where(h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6) {
    &:not(:where([class~=not-format] *)) {
      @apply
      leading-none
      ;
    }
  }
  :where(h1, .h1) {
    &:not(:where([class~=not-format] *)) {
      @apply
      mb-10
      text-4xl
      md:text-5xl
      ;
    }
  }
  :where(h2, .h2) {
    &:not(:where([class~=not-format] *)) {
      @apply
      mb-7
      text-3xl
      md:text-4xl
      ;
    }
  }
  :where(h3, .h3) {
    &:not(:where([class~=not-format] *)) {
      @apply
      mb-7
      text-2xl
      md:text-3xl
      ;
    }
  }
  :where(h4, .h4) {
    &:not(:where([class~=not-format] *)) {
      @apply
      mb-7
      text-xl
      md:text-2xl
      ;
    }
  }
  :where(h5, .h5) {
    &:not(:where([class~=not-format] *)) {
      @apply
      mb-7
      text-lg
      md:text-xl
      ;
    }
  }
  :where(h6, .h6) {
    &:not(:where([class~=not-format] *)) {
      @apply
      mb-7
      text-lg
      ;
    }
  }
  :where(p, ul, ol) {
    &:not(:where([class~=not-format] *)) {
      @apply
      text-ui-200
      my-7
      leading-loose
      ;
    }
  }
  :where([class~=lead]) {
    &:not(:where([class~=not-format] *)) {
      @apply
      text-xl
      my-7
      text-ui-300
      ;
    }
  }
  :where(blockquote) {
    &:not(:where([class~=not-format] *)) {
      > p {
        @apply
        pl-8
        py-4
        border-l-2
        border-ui-600
        text-2xl
        text-ui-300
        font-headings
        leading-tight
        ;
      }
      + figcaption {
        @apply
        text-base
        pl-8
        ;
      }
    }
  }
  :where(figure) {
    &:not(:where([class~=not-format] *)) {
      @apply
      my-7
      ;
      > img {
        @apply
        rounded-lg
        ;
      }
    }
  }
  :where(figcaption) {
    &:not(:where([class~=not-format] *)) {
      @apply
      text-sm
      ;
      p {
        @apply
        text-ui-300
        ;
      }
    }
  }
  :where(ul, ol) {
    &:not(:where([class~=not-format] *)) {
      @apply
      list-outside
      pl-8
      ;

      > li {
        &:not(:last-of-type) {
          @apply
          my-4
          pl-2
          ;
          :where(strong, b) {
            @apply
            text-ui-100
            ;
          }
        } 
      }
    }
  }
  :where(ul) {
    &:not(:where([class~=not-format] *)) {
      @apply
      list-disc
      ;
    }
  }
  :where(ol) {
    &:not(:where([class~=not-format] *)) {
      @apply
      list-decimal
      ;
    }
  }
  :where(a) {
    &:not(:where([class~=not-format] *)) {
      @apply
      text-main
      underline
      hover:no-underline
      ;
    }
  }

  &.format-lg {
    :where([class~=lead]) {
      &:not(:where([class~=not-format] *)) {
        @apply
        text-2xl
        ;
      }
    }
    :where(p, ul, ol) {
      &:not(:where([class~=not-format] *)) {
        @apply
        text-lg
        ;
      }
    }
  }
}

.animate-stripe {
  @apply
  relative
  ;
  > * {
    @apply
    relative
    inline-block
    opacity-0
    transform-gpu
    ;
    /*animate-[stripe-text_1s_ease_1_forwards]*/
    animation: stripe-text 0.9s cubic-bezier(1, .2, .2, 1) 1 forwards 0.6s;
    &::after {
      @apply
      content-['']
      bg-ui-900
      absolute
      inset-0
      block
      w-full
      h-full
      scale-x-0
      -translate-x-3
      origin-left
      transform-gpu
      ;
      /*animate-[stripe-cache_1s_ease_1_forwards]*/
      animation: stripe-cache 0.9s cubic-bezier(1, .2, .2, 1) 1 forwards 0.6s;
    }
    &:nth-child(1) {
      &,
      &::after {
        animation-delay: .1s;
      }
    }
    &:nth-child(2) {
      &,
      &::after {
        animation-delay: .2s;
      }
    }
    &:nth-child(3) {
      &,
      &::after {
        animation-delay: .3s;
      }
    }
    &:nth-child(4) {
      &,
      &::after {
        animation-delay: .4s;
      }
    }
    &:nth-child(5) {
      &,
      &::after {
        animation-delay: .5s;
      }
    }
  }
}


@keyframes stripe-cache {
  0% {
    transform-origin: 0 center;
    transform: translateX(0.75rem) scaleX(0);
  }
  50% {
    transform-origin: 0 center;
    transform: translateX(0) scaleX(1);
  }
  51% {
    transform-origin: 100% center;
  }
  100% {
    transform-origin: 100% center;
    transform: scaleX(0);
  }
}
@keyframes stripe-text {
  0% {
      opacity: 0;
  }
  50% {
      opacity: 0;
  }
  51% {
      opacity: 1;
  }
  100% {
      opacity: 1;
  }
}